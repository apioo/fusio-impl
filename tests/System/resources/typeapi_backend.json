{
  "baseUrl": "http://127.0.0.1/",
  "security": null,
  "operations": {
    "backend.user.delete": {
      "path": "/backend/user/$user_id<[0-9]+>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "user_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.user"
      ],
      "authorization": true,
      "tags": [
        "user"
      ]
    },
    "backend.user.update": {
      "path": "/backend/user/$user_id<[0-9]+>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "user_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "UserUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.user"
      ],
      "authorization": true,
      "tags": [
        "user"
      ]
    },
    "backend.user.get": {
      "path": "/backend/user/$user_id<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "User"
        }
      },
      "arguments": {
        "user_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.user"
      ],
      "authorization": true,
      "tags": [
        "user"
      ]
    },
    "backend.user.create": {
      "path": "/backend/user",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "UserCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.user"
      ],
      "authorization": true,
      "tags": [
        "user"
      ]
    },
    "backend.user.getAll": {
      "path": "/backend/user",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "UserCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.user"
      ],
      "authorization": true,
      "tags": [
        "user"
      ]
    },
    "backend.trash.restore": {
      "path": "/backend/trash/:type",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "type": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "TrashRestore"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.trash"
      ],
      "authorization": true,
      "tags": [
        "trash"
      ]
    },
    "backend.trash.getAllByType": {
      "path": "/backend/trash/:type",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "TrashDataCollection"
        }
      },
      "arguments": {
        "type": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.trash"
      ],
      "authorization": true,
      "tags": [
        "trash"
      ]
    },
    "backend.trash.getTypes": {
      "path": "/backend/trash",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "TrashTypes"
        }
      },
      "arguments": [],
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.trash"
      ],
      "authorization": true,
      "tags": [
        "trash"
      ]
    },
    "backend.transaction.get": {
      "path": "/backend/transaction/$transaction_id<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Transaction"
        }
      },
      "arguments": {
        "transaction_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.transaction"
      ],
      "authorization": true,
      "tags": [
        "transaction"
      ]
    },
    "backend.transaction.getAll": {
      "path": "/backend/transaction",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "TransactionCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "planId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "status": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "provider": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.transaction"
      ],
      "authorization": true,
      "tags": [
        "transaction"
      ]
    },
    "backend.statistic.getUsedPoints": {
      "path": "/backend/statistic/used_points",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "StatisticChart"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "operationId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "ip": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "userAgent": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "method": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "path": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "header": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "body": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.statistic"
      ],
      "authorization": true,
      "tags": [
        "statistic"
      ]
    },
    "backend.statistic.getTimePerOperation": {
      "path": "/backend/statistic/time_per_operation",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "StatisticChart"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "operationId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "ip": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "userAgent": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "method": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "path": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "header": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "body": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.statistic"
      ],
      "authorization": true,
      "tags": [
        "statistic"
      ]
    },
    "backend.statistic.getTimeAverage": {
      "path": "/backend/statistic/time_average",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "StatisticChart"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "operationId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "ip": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "userAgent": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "method": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "path": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "header": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "body": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.statistic"
      ],
      "authorization": true,
      "tags": [
        "statistic"
      ]
    },
    "backend.statistic.getMostUsedOperations": {
      "path": "/backend/statistic/most_used_operations",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "StatisticChart"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "operationId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "ip": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "userAgent": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "method": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "path": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "header": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "body": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.statistic"
      ],
      "authorization": true,
      "tags": [
        "statistic"
      ]
    },
    "backend.statistic.getMostUsedApps": {
      "path": "/backend/statistic/most_used_apps",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "StatisticChart"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "operationId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "ip": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "userAgent": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "method": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "path": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "header": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "body": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.statistic"
      ],
      "authorization": true,
      "tags": [
        "statistic"
      ]
    },
    "backend.statistic.getIssuedTokens": {
      "path": "/backend/statistic/issued_tokens",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "StatisticChart"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "operationId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "ip": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "userAgent": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "method": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "path": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "header": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "body": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.statistic"
      ],
      "authorization": true,
      "tags": [
        "statistic"
      ]
    },
    "backend.statistic.getIncomingTransactions": {
      "path": "/backend/statistic/incoming_transactions",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "StatisticChart"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "operationId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "ip": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "userAgent": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "method": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "path": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "header": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "body": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.statistic"
      ],
      "authorization": true,
      "tags": [
        "statistic"
      ]
    },
    "backend.statistic.getIncomingRequests": {
      "path": "/backend/statistic/incoming_requests",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "StatisticChart"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "operationId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "ip": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "userAgent": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "method": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "path": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "header": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "body": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.statistic"
      ],
      "authorization": true,
      "tags": [
        "statistic"
      ]
    },
    "backend.statistic.getErrorsPerOperation": {
      "path": "/backend/statistic/errors_per_operation",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "StatisticChart"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "operationId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "ip": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "userAgent": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "method": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "path": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "header": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "body": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.statistic"
      ],
      "authorization": true,
      "tags": [
        "statistic"
      ]
    },
    "backend.statistic.getCountRequests": {
      "path": "/backend/statistic/count_requests",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "StatisticCount"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "operationId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "ip": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "userAgent": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "method": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "path": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "header": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "body": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.statistic"
      ],
      "authorization": true,
      "tags": [
        "statistic"
      ]
    },
    "backend.sdk.generate": {
      "path": "/backend/sdk",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "SdkGenerate"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.sdk"
      ],
      "authorization": true,
      "tags": [
        "sdk"
      ]
    },
    "backend.sdk.getAll": {
      "path": "/backend/sdk",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "SdkResponse"
        }
      },
      "arguments": [],
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.sdk"
      ],
      "authorization": true,
      "tags": [
        "sdk"
      ]
    },
    "backend.scope.delete": {
      "path": "/backend/scope/$scope_id<[0-9]+|^~>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "scope_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.scope"
      ],
      "authorization": true,
      "tags": [
        "scope"
      ]
    },
    "backend.scope.update": {
      "path": "/backend/scope/$scope_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "scope_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "ScopeUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.scope"
      ],
      "authorization": true,
      "tags": [
        "scope"
      ]
    },
    "backend.scope.get": {
      "path": "/backend/scope/$scope_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Scope"
        }
      },
      "arguments": {
        "scope_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.scope"
      ],
      "authorization": true,
      "tags": [
        "scope"
      ]
    },
    "backend.scope.getCategories": {
      "path": "/backend/scope/categories",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "ScopeCategories"
        }
      },
      "arguments": [],
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.scope"
      ],
      "authorization": true,
      "tags": [
        "scope"
      ]
    },
    "backend.scope.create": {
      "path": "/backend/scope",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "ScopeCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.scope"
      ],
      "authorization": true,
      "tags": [
        "scope"
      ]
    },
    "backend.scope.getAll": {
      "path": "/backend/scope",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "ScopeCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.scope"
      ],
      "authorization": true,
      "tags": [
        "scope"
      ]
    },
    "backend.schema.delete": {
      "path": "/backend/schema/$schema_id<[0-9]+|^~>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "schema_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.schema"
      ],
      "authorization": true,
      "tags": [
        "schema"
      ]
    },
    "backend.schema.update": {
      "path": "/backend/schema/$schema_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "schema_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "SchemaUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.schema"
      ],
      "authorization": true,
      "tags": [
        "schema"
      ]
    },
    "backend.schema.get": {
      "path": "/backend/schema/$schema_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Schema"
        }
      },
      "arguments": {
        "schema_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.schema"
      ],
      "authorization": true,
      "tags": [
        "schema"
      ]
    },
    "backend.schema.updateForm": {
      "path": "/backend/schema/form/$schema_id<[0-9]+>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "schema_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "SchemaForm"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.schema"
      ],
      "authorization": true,
      "tags": [
        "schema"
      ]
    },
    "backend.schema.getPreview": {
      "path": "/backend/schema/preview/:schema_id",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "SchemaPreviewResponse"
        }
      },
      "arguments": {
        "schema_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.schema"
      ],
      "authorization": true,
      "tags": [
        "schema"
      ]
    },
    "backend.schema.create": {
      "path": "/backend/schema",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "SchemaCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.schema"
      ],
      "authorization": true,
      "tags": [
        "schema"
      ]
    },
    "backend.schema.getAll": {
      "path": "/backend/schema",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "SchemaCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.schema"
      ],
      "authorization": true,
      "tags": [
        "schema"
      ]
    },
    "backend.operation.delete": {
      "path": "/backend/operation/$operation_id<[0-9]+|^~>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "operation_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.operation"
      ],
      "authorization": true,
      "tags": [
        "operation"
      ]
    },
    "backend.operation.update": {
      "path": "/backend/operation/$operation_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "operation_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "OperationUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.operation"
      ],
      "authorization": true,
      "tags": [
        "operation"
      ]
    },
    "backend.operation.get": {
      "path": "/backend/operation/$operation_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Operation"
        }
      },
      "arguments": {
        "operation_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.operation"
      ],
      "authorization": true,
      "tags": [
        "operation"
      ]
    },
    "backend.operation.create": {
      "path": "/backend/operation",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "OperationCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.operation"
      ],
      "authorization": true,
      "tags": [
        "operation"
      ]
    },
    "backend.operation.getAll": {
      "path": "/backend/operation",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "OperationCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.operation"
      ],
      "authorization": true,
      "tags": [
        "operation"
      ]
    },
    "backend.role.delete": {
      "path": "/backend/role/$role_id<[0-9]+|^~>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "role_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.role"
      ],
      "authorization": true,
      "tags": [
        "role"
      ]
    },
    "backend.role.update": {
      "path": "/backend/role/$role_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "role_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "RoleUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.role"
      ],
      "authorization": true,
      "tags": [
        "role"
      ]
    },
    "backend.role.get": {
      "path": "/backend/role/$role_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Role"
        }
      },
      "arguments": {
        "role_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.role"
      ],
      "authorization": true,
      "tags": [
        "role"
      ]
    },
    "backend.role.create": {
      "path": "/backend/role",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "RoleCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.role"
      ],
      "authorization": true,
      "tags": [
        "role"
      ]
    },
    "backend.role.getAll": {
      "path": "/backend/role",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "RoleCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.role"
      ],
      "authorization": true,
      "tags": [
        "role"
      ]
    },
    "backend.rate.delete": {
      "path": "/backend/rate/$rate_id<[0-9]+|^~>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "rate_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.rate"
      ],
      "authorization": true,
      "tags": [
        "rate"
      ]
    },
    "backend.rate.update": {
      "path": "/backend/rate/$rate_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "rate_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "RateUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.rate"
      ],
      "authorization": true,
      "tags": [
        "rate"
      ]
    },
    "backend.rate.get": {
      "path": "/backend/rate/$rate_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Rate"
        }
      },
      "arguments": {
        "rate_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.rate"
      ],
      "authorization": true,
      "tags": [
        "rate"
      ]
    },
    "backend.rate.create": {
      "path": "/backend/rate",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "RateCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.rate"
      ],
      "authorization": true,
      "tags": [
        "rate"
      ]
    },
    "backend.rate.getAll": {
      "path": "/backend/rate",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "RateCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.rate"
      ],
      "authorization": true,
      "tags": [
        "rate"
      ]
    },
    "backend.plan.delete": {
      "path": "/backend/plan/$plan_id<[0-9]+|^~>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "plan_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.plan"
      ],
      "authorization": true,
      "tags": [
        "plan"
      ]
    },
    "backend.plan.update": {
      "path": "/backend/plan/$plan_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "plan_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "PlanUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.plan"
      ],
      "authorization": true,
      "tags": [
        "plan"
      ]
    },
    "backend.plan.get": {
      "path": "/backend/plan/$plan_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Plan"
        }
      },
      "arguments": {
        "plan_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.plan"
      ],
      "authorization": true,
      "tags": [
        "plan"
      ]
    },
    "backend.plan.create": {
      "path": "/backend/plan",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "PlanCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.plan"
      ],
      "authorization": true,
      "tags": [
        "plan"
      ]
    },
    "backend.plan.getAll": {
      "path": "/backend/plan",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "PlanCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.plan"
      ],
      "authorization": true,
      "tags": [
        "plan"
      ]
    },
    "backend.page.delete": {
      "path": "/backend/page/$page_id<[0-9]+|^~>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "page_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.page"
      ],
      "authorization": true,
      "tags": [
        "page"
      ]
    },
    "backend.page.update": {
      "path": "/backend/page/$page_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "page_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "PageUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.page"
      ],
      "authorization": true,
      "tags": [
        "page"
      ]
    },
    "backend.page.get": {
      "path": "/backend/page/$page_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Page"
        }
      },
      "arguments": {
        "page_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.page"
      ],
      "authorization": true,
      "tags": [
        "page"
      ]
    },
    "backend.page.create": {
      "path": "/backend/page",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "PageCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.page"
      ],
      "authorization": true,
      "tags": [
        "page"
      ]
    },
    "backend.page.getAll": {
      "path": "/backend/page",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "PageCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.page"
      ],
      "authorization": true,
      "tags": [
        "page"
      ]
    },
    "backend.marketplace.remove": {
      "path": "/backend/marketplace/:app_name",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "app_name": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.marketplace"
      ],
      "authorization": true,
      "tags": [
        "marketplace"
      ]
    },
    "backend.marketplace.update": {
      "path": "/backend/marketplace/:app_name",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "app_name": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.marketplace"
      ],
      "authorization": true,
      "tags": [
        "marketplace"
      ]
    },
    "backend.marketplace.get": {
      "path": "/backend/marketplace/:app_name",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "MarketplaceLocalApp"
        }
      },
      "arguments": {
        "app_name": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.marketplace"
      ],
      "authorization": true,
      "tags": [
        "marketplace"
      ]
    },
    "backend.marketplace.install": {
      "path": "/backend/marketplace",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "MarketplaceInstall"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.marketplace"
      ],
      "authorization": true,
      "tags": [
        "marketplace"
      ]
    },
    "backend.marketplace.getAll": {
      "path": "/backend/marketplace",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "MarketplaceCollection"
        }
      },
      "arguments": [],
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.marketplace"
      ],
      "authorization": true,
      "tags": [
        "marketplace"
      ]
    },
    "backend.log.get": {
      "path": "/backend/log/$log_id<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Log"
        }
      },
      "arguments": {
        "log_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.log"
      ],
      "authorization": true,
      "tags": [
        "log"
      ]
    },
    "backend.log.getAll": {
      "path": "/backend/log",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "LogCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "routeId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "ip": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "userAgent": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "method": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "path": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "header": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "body": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.log"
      ],
      "authorization": true,
      "tags": [
        "log"
      ]
    },
    "backend.log.getError": {
      "path": "/backend/log/error/$error_id<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "LogError"
        }
      },
      "arguments": {
        "error_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.log"
      ],
      "authorization": true,
      "tags": [
        "log"
      ]
    },
    "backend.log.getAllErrors": {
      "path": "/backend/log/error",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "LogErrorCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.log"
      ],
      "authorization": true,
      "tags": [
        "log"
      ]
    },
    "backend.identity.delete": {
      "path": "/backend/identity/$identity_id<[0-9]+|^~>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "identity_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.identity"
      ],
      "authorization": true,
      "tags": [
        "identity"
      ]
    },
    "backend.identity.update": {
      "path": "/backend/identity/$identity_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "identity_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "IdentityUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.identity"
      ],
      "authorization": true,
      "tags": [
        "identity"
      ]
    },
    "backend.identity.get": {
      "path": "/backend/identity/$identity_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Identity"
        }
      },
      "arguments": {
        "identity_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.identity"
      ],
      "authorization": true,
      "tags": [
        "identity"
      ]
    },
    "backend.identity.create": {
      "path": "/backend/identity",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "IdentityCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.identity"
      ],
      "authorization": true,
      "tags": [
        "identity"
      ]
    },
    "backend.identity.getAll": {
      "path": "/backend/identity",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "IdentityCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.identity"
      ],
      "authorization": true,
      "tags": [
        "identity"
      ]
    },
    "backend.generator.getChangelog": {
      "path": "/backend/generator/:provider",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "GeneratorProviderChangelog"
        }
      },
      "arguments": {
        "provider": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "GeneratorProviderConfig"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.generator"
      ],
      "authorization": true,
      "tags": [
        "generator"
      ]
    },
    "backend.generator.executeProvider": {
      "path": "/backend/generator/:provider",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "provider": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "GeneratorProvider"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.generator"
      ],
      "authorization": true,
      "tags": [
        "generator"
      ]
    },
    "backend.generator.getProviderForm": {
      "path": "/backend/generator/:provider",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "FormContainer"
        }
      },
      "arguments": {
        "provider": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.generator"
      ],
      "authorization": true,
      "tags": [
        "generator"
      ]
    },
    "backend.generator.getProviders": {
      "path": "/backend/generator",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "GeneratorIndexProviders"
        }
      },
      "arguments": [],
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.generator"
      ],
      "authorization": true,
      "tags": [
        "generator"
      ]
    },
    "backend.event.delete": {
      "path": "/backend/event/$event_id<[0-9]+|^~>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "event_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.event"
      ],
      "authorization": true,
      "tags": [
        "event"
      ]
    },
    "backend.event.update": {
      "path": "/backend/event/$event_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "event_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "EventUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.event"
      ],
      "authorization": true,
      "tags": [
        "event"
      ]
    },
    "backend.event.get": {
      "path": "/backend/event/$event_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Event"
        }
      },
      "arguments": {
        "event_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.event"
      ],
      "authorization": true,
      "tags": [
        "event"
      ]
    },
    "backend.event.create": {
      "path": "/backend/event",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "EventCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.event"
      ],
      "authorization": true,
      "tags": [
        "event"
      ]
    },
    "backend.event.getAll": {
      "path": "/backend/event",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "EventCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.event"
      ],
      "authorization": true,
      "tags": [
        "event"
      ]
    },
    "backend.event.deleteSubscription": {
      "path": "/backend/event/subscription/$subscription_id<[0-9]+>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "subscription_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.event"
      ],
      "authorization": true,
      "tags": [
        "event"
      ]
    },
    "backend.event.updateSubscription": {
      "path": "/backend/event/subscription/$subscription_id<[0-9]+>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "subscription_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "EventSubscriptionUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.event"
      ],
      "authorization": true,
      "tags": [
        "event"
      ]
    },
    "backend.event.getSubscription": {
      "path": "/backend/event/subscription/$subscription_id<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "EventSubscription"
        }
      },
      "arguments": {
        "subscription_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.event"
      ],
      "authorization": true,
      "tags": [
        "event"
      ]
    },
    "backend.event.createSubscription": {
      "path": "/backend/event/subscription",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "EventSubscriptionCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.event"
      ],
      "authorization": true,
      "tags": [
        "event"
      ]
    },
    "backend.event.getAllSubscriptions": {
      "path": "/backend/event/subscription",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "EventSubscriptionCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.event"
      ],
      "authorization": true,
      "tags": [
        "event"
      ]
    },
    "backend.dashboard.getAll": {
      "path": "/backend/dashboard",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Dashboard"
        }
      },
      "arguments": [],
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.dashboard"
      ],
      "authorization": true,
      "tags": [
        "dashboard"
      ]
    },
    "backend.cronjob.delete": {
      "path": "/backend/cronjob/$cronjob_id<[0-9]+|^~>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "cronjob_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.cronjob"
      ],
      "authorization": true,
      "tags": [
        "cronjob"
      ]
    },
    "backend.cronjob.update": {
      "path": "/backend/cronjob/$cronjob_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "cronjob_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "CronjobUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.cronjob"
      ],
      "authorization": true,
      "tags": [
        "cronjob"
      ]
    },
    "backend.cronjob.get": {
      "path": "/backend/cronjob/$cronjob_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Cronjob"
        }
      },
      "arguments": {
        "cronjob_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.cronjob"
      ],
      "authorization": true,
      "tags": [
        "cronjob"
      ]
    },
    "backend.cronjob.create": {
      "path": "/backend/cronjob",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "CronjobCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.cronjob"
      ],
      "authorization": true,
      "tags": [
        "cronjob"
      ]
    },
    "backend.cronjob.getAll": {
      "path": "/backend/cronjob",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "CronjobCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.cronjob"
      ],
      "authorization": true,
      "tags": [
        "cronjob"
      ]
    },
    "backend.connection.getIntrospectionForEntity": {
      "path": "/backend/connection/$connection_id<[0-9]+|^~>/introspection/:entity",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "ConnectionIntrospectionEntity"
        }
      },
      "arguments": {
        "connection_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "entity": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.connection"
      ],
      "authorization": true,
      "tags": [
        "connection"
      ]
    },
    "backend.connection.getIntrospection": {
      "path": "/backend/connection/$connection_id<[0-9]+|^~>/introspection",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "ConnectionIntrospectionEntities"
        }
      },
      "arguments": {
        "connection_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.connection"
      ],
      "authorization": true,
      "tags": [
        "connection"
      ]
    },
    "backend.connection.getRedirect": {
      "path": "/backend/connection/$connection_id<[0-9]+|^~>/redirect",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "connection_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.connection"
      ],
      "authorization": true,
      "tags": [
        "connection"
      ]
    },
    "backend.connection.delete": {
      "path": "/backend/connection/$connection_id<[0-9]+|^~>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "connection_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.connection"
      ],
      "authorization": true,
      "tags": [
        "connection"
      ]
    },
    "backend.connection.update": {
      "path": "/backend/connection/$connection_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "connection_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "ConnectionUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.connection"
      ],
      "authorization": true,
      "tags": [
        "connection"
      ]
    },
    "backend.connection.get": {
      "path": "/backend/connection/$connection_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Connection"
        }
      },
      "arguments": {
        "connection_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.connection"
      ],
      "authorization": true,
      "tags": [
        "connection"
      ]
    },
    "backend.connection.getForm": {
      "path": "/backend/connection/form",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "FormContainer"
        }
      },
      "arguments": {
        "class": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.connection"
      ],
      "authorization": true,
      "tags": [
        "connection"
      ]
    },
    "backend.connection.getClasses": {
      "path": "/backend/connection/list",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "ConnectionIndex"
        }
      },
      "arguments": [],
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.connection"
      ],
      "authorization": true,
      "tags": [
        "connection"
      ]
    },
    "backend.connection.create": {
      "path": "/backend/connection",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "ConnectionCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.connection"
      ],
      "authorization": true,
      "tags": [
        "connection"
      ]
    },
    "backend.connection.getAll": {
      "path": "/backend/connection",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "ConnectionCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.connection"
      ],
      "authorization": true,
      "tags": [
        "connection"
      ]
    },
    "backend.config.update": {
      "path": "/backend/config/$config_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "config_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "ConfigUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.config"
      ],
      "authorization": true,
      "tags": [
        "config"
      ]
    },
    "backend.config.get": {
      "path": "/backend/config/$config_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Config"
        }
      },
      "arguments": {
        "config_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.config"
      ],
      "authorization": true,
      "tags": [
        "config"
      ]
    },
    "backend.config.getAll": {
      "path": "/backend/config",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "ConfigCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.config"
      ],
      "authorization": true,
      "tags": [
        "config"
      ]
    },
    "backend.category.delete": {
      "path": "/backend/category/$category_id<[0-9]+|^~>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "category_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.category"
      ],
      "authorization": true,
      "tags": [
        "category"
      ]
    },
    "backend.category.update": {
      "path": "/backend/category/$category_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "category_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "CategoryUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.category"
      ],
      "authorization": true,
      "tags": [
        "category"
      ]
    },
    "backend.category.get": {
      "path": "/backend/category/$category_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Category"
        }
      },
      "arguments": {
        "category_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.category"
      ],
      "authorization": true,
      "tags": [
        "category"
      ]
    },
    "backend.category.create": {
      "path": "/backend/category",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "CategoryCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.category"
      ],
      "authorization": true,
      "tags": [
        "category"
      ]
    },
    "backend.category.getAll": {
      "path": "/backend/category",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "CategoryCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.category"
      ],
      "authorization": true,
      "tags": [
        "category"
      ]
    },
    "backend.audit.get": {
      "path": "/backend/audit/$audit_id<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Audit"
        }
      },
      "arguments": {
        "audit_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.audit"
      ],
      "authorization": true,
      "tags": [
        "audit"
      ]
    },
    "backend.audit.getAll": {
      "path": "/backend/audit",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "AuditCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "event": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "ip": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "message": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.audit"
      ],
      "authorization": true,
      "tags": [
        "audit"
      ]
    },
    "backend.app.deleteToken": {
      "path": "/backend/app/$app_id<[0-9]+>/token/:token_id",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "app_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "token_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.app"
      ],
      "authorization": true,
      "tags": [
        "app"
      ]
    },
    "backend.app.delete": {
      "path": "/backend/app/$app_id<[0-9]+>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "app_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.app"
      ],
      "authorization": true,
      "tags": [
        "app"
      ]
    },
    "backend.app.update": {
      "path": "/backend/app/$app_id<[0-9]+>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "app_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "AppUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.app"
      ],
      "authorization": true,
      "tags": [
        "app"
      ]
    },
    "backend.app.get": {
      "path": "/backend/app/$app_id<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "App"
        }
      },
      "arguments": {
        "app_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.app"
      ],
      "authorization": true,
      "tags": [
        "app"
      ]
    },
    "backend.app.create": {
      "path": "/backend/app",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "AppCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.app"
      ],
      "authorization": true,
      "tags": [
        "app"
      ]
    },
    "backend.app.getAll": {
      "path": "/backend/app",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "AppCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.app"
      ],
      "authorization": true,
      "tags": [
        "app"
      ]
    },
    "backend.app.getToken": {
      "path": "/backend/app/token/$token_id<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "AppToken"
        }
      },
      "arguments": {
        "token_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.app"
      ],
      "authorization": true,
      "tags": [
        "app"
      ]
    },
    "backend.app.getAllTokens": {
      "path": "/backend/app/token",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "AppTokenCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "from": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "to": {
          "in": "query",
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "appId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "userId": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "status": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "scope": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        "ip": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.app"
      ],
      "authorization": true,
      "tags": [
        "app"
      ]
    },
    "backend.action.delete": {
      "path": "/backend/action/$action_id<[0-9]+|^~>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "action_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.action"
      ],
      "authorization": true,
      "tags": [
        "action"
      ]
    },
    "backend.action.update": {
      "path": "/backend/action/$action_id<[0-9]+|^~>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "action_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "ActionUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.action"
      ],
      "authorization": true,
      "tags": [
        "action"
      ]
    },
    "backend.action.get": {
      "path": "/backend/action/$action_id<[0-9]+|^~>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Action"
        }
      },
      "arguments": {
        "action_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 404,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 410,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.action"
      ],
      "authorization": true,
      "tags": [
        "action"
      ]
    },
    "backend.action.execute": {
      "path": "/backend/action/execute/:action_id",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "ActionExecuteResponse"
        }
      },
      "arguments": {
        "action_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "ActionExecuteRequest"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.action"
      ],
      "authorization": true,
      "tags": [
        "action"
      ]
    },
    "backend.action.getForm": {
      "path": "/backend/action/form",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "FormContainer"
        }
      },
      "arguments": {
        "class": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.action"
      ],
      "authorization": true,
      "tags": [
        "action"
      ]
    },
    "backend.action.getClasses": {
      "path": "/backend/action/list",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "ActionIndex"
        }
      },
      "arguments": [],
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.action"
      ],
      "authorization": true,
      "tags": [
        "action"
      ]
    },
    "backend.action.create": {
      "path": "/backend/action",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "ActionCreate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.action"
      ],
      "authorization": true,
      "tags": [
        "action"
      ]
    },
    "backend.action.getAll": {
      "path": "/backend/action",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "ActionCollection"
        }
      },
      "arguments": {
        "startIndex": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "count": {
          "in": "query",
          "schema": {
            "type": "integer"
          }
        },
        "search": {
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.action"
      ],
      "authorization": true,
      "tags": [
        "action"
      ]
    },
    "backend.account.changePassword": {
      "path": "/backend/account/change_password",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "AccountChangePassword"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.account"
      ],
      "authorization": true,
      "tags": [
        "account"
      ]
    },
    "backend.account.update": {
      "path": "/backend/account",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "UserUpdate"
          }
        }
      },
      "throws": [
        {
          "code": 400,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.account"
      ],
      "authorization": true,
      "tags": [
        "account"
      ]
    },
    "backend.account.get": {
      "path": "/backend/account",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "User"
        }
      },
      "arguments": [],
      "throws": [
        {
          "code": 401,
          "schema": {
            "$ref": "Message"
          }
        },
        {
          "code": 500,
          "schema": {
            "$ref": "Message"
          }
        }
      ],
      "description": "",
      "stability": 1,
      "security": [
        "backend.account"
      ],
      "authorization": true,
      "tags": [
        "account"
      ]
    }
  },
  "definitions": {
    "AccountChangePassword": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string",
          "minLength": 8,
          "maxLength": 128
        },
        "newPassword": {
          "type": "string",
          "minLength": 8,
          "maxLength": 128
        },
        "verifyPassword": {
          "type": "string",
          "minLength": 8,
          "maxLength": 128
        }
      }
    },
    "Action": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\-\\_]{3,255}$"
        },
        "class": {
          "type": "string"
        },
        "async": {
          "type": "boolean"
        },
        "config": {
          "$ref": "ActionConfig"
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "ActionCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Action"
      }
    },
    "ActionConfig": {
      "type": "object",
      "additionalProperties": {
        "type": "any"
      }
    },
    "ActionCreate": {
      "$extends": "Action",
      "type": "object",
      "required": [
        "name"
      ]
    },
    "ActionExecuteRequest": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "pattern": "GET|POST|PUT|PATCH|DELETE"
        },
        "uriFragments": {
          "type": "string"
        },
        "parameters": {
          "type": "string"
        },
        "headers": {
          "type": "string"
        },
        "body": {
          "$ref": "ActionExecuteRequestBody"
        }
      },
      "required": [
        "method"
      ]
    },
    "ActionExecuteRequestBody": {
      "type": "object",
      "additionalProperties": {
        "type": "any"
      }
    },
    "ActionExecuteResponse": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer"
        },
        "headers": {
          "$ref": "ActionExecuteResponseHeaders"
        },
        "body": {
          "$ref": "ActionExecuteResponseBody"
        }
      }
    },
    "ActionExecuteResponseBody": {
      "type": "object",
      "additionalProperties": {
        "type": "any"
      }
    },
    "ActionExecuteResponseHeaders": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ActionIndex": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "ActionIndexEntry"
          }
        }
      }
    },
    "ActionIndexEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "class": {
          "type": "string"
        }
      }
    },
    "ActionUpdate": {
      "$extends": "Action",
      "type": "object"
    },
    "App": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\-\\_]{3,64}$"
        },
        "url": {
          "type": "string"
        },
        "parameters": {
          "type": "string"
        },
        "appKey": {
          "type": "string"
        },
        "appSecret": {
          "type": "string"
        },
        "metadata": {
          "$ref": "Metadata"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tokens": {
          "type": "array",
          "items": {
            "$ref": "AppToken"
          }
        }
      }
    },
    "AppCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "App"
      }
    },
    "AppCreate": {
      "$extends": "App",
      "type": "object",
      "required": [
        "userId",
        "name",
        "url",
        "scopes"
      ]
    },
    "AppToken": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "token": {
          "type": "string"
        },
        "scope": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ip": {
          "type": "string"
        },
        "expire": {
          "format": "date-time",
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AppTokenCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "AppToken"
      }
    },
    "AppUpdate": {
      "$extends": "App",
      "type": "object"
    },
    "Audit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "app": {
          "$ref": "App"
        },
        "user": {
          "$ref": "User"
        },
        "event": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "content": {
          "$ref": "AuditObject"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AuditCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Audit"
      }
    },
    "AuditObject": {
      "description": "A key value object containing the changes",
      "type": "object",
      "additionalProperties": {
        "type": "any"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\-\\_]{3,64}$"
        }
      }
    },
    "CategoryCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Category"
      }
    },
    "CategoryCreate": {
      "$extends": "Category",
      "type": "object",
      "required": [
        "name"
      ]
    },
    "CategoryUpdate": {
      "$extends": "Category",
      "type": "object"
    },
    "Collection": {
      "type": "object",
      "properties": {
        "totalResults": {
          "type": "integer"
        },
        "startIndex": {
          "type": "integer"
        },
        "itemsPerPage": {
          "type": "integer"
        },
        "entry": {
          "type": "array",
          "items": {
            "$generic": "T"
          }
        }
      }
    },
    "Config": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "type": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "value": {
          "type": "any"
        }
      }
    },
    "ConfigCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Config"
      }
    },
    "ConfigUpdate": {
      "$extends": "Config",
      "type": "object"
    },
    "Connection": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\-\\_]{3,255}$"
        },
        "class": {
          "type": "string"
        },
        "config": {
          "$ref": "ConnectionConfig"
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "ConnectionCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Connection"
      }
    },
    "ConnectionConfig": {
      "type": "object",
      "additionalProperties": {
        "type": "any"
      },
      "maxProperties": 16
    },
    "ConnectionCreate": {
      "$extends": "Connection",
      "type": "object"
    },
    "ConnectionIndex": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "$ref": "ConnectionIndexEntry"
          }
        }
      }
    },
    "ConnectionIndexEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "class": {
          "type": "string"
        }
      }
    },
    "ConnectionIntrospectionEntities": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConnectionIntrospectionEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "ConnectionIntrospectionEntityRow"
          }
        }
      }
    },
    "ConnectionIntrospectionEntityRow": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConnectionUpdate": {
      "$extends": "Connection",
      "type": "object"
    },
    "Cronjob": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\-\\_]{3,64}$"
        },
        "cron": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "executeDate": {
          "format": "date-time",
          "type": "string"
        },
        "exitCode": {
          "type": "integer"
        },
        "metadata": {
          "$ref": "Metadata"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "CronjobError"
          }
        }
      }
    },
    "CronjobCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Cronjob"
      }
    },
    "CronjobCreate": {
      "$extends": "Cronjob",
      "type": "object",
      "required": [
        "name",
        "cron",
        "action"
      ]
    },
    "CronjobError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "trace": {
          "type": "string"
        },
        "file": {
          "type": "string"
        },
        "line": {
          "type": "integer"
        }
      }
    },
    "CronjobUpdate": {
      "$extends": "Cronjob",
      "type": "object"
    },
    "Dashboard": {
      "type": "object",
      "properties": {
        "errorsPerOperation": {
          "$ref": "StatisticChart"
        },
        "incomingRequests": {
          "$ref": "StatisticChart"
        },
        "incomingTransactions": {
          "$ref": "StatisticChart"
        },
        "mostUsedOperations": {
          "$ref": "StatisticChart"
        },
        "timePerOperation": {
          "$ref": "StatisticChart"
        },
        "latestApps": {
          "$ref": "DashboardApps"
        },
        "latestRequests": {
          "$ref": "DashboardRequests"
        },
        "latestUsers": {
          "$ref": "DashboardUsers"
        },
        "latestTransactions": {
          "$ref": "DashboardTransactions"
        }
      }
    },
    "DashboardApp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DashboardApps": {
      "$ref": "Collection",
      "$template": {
        "T": "DashboardApp"
      }
    },
    "DashboardRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "path": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DashboardRequests": {
      "$ref": "Collection",
      "$template": {
        "T": "DashboardRequest"
      }
    },
    "DashboardTransaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DashboardTransactions": {
      "$ref": "Collection",
      "$template": {
        "T": "DashboardTransaction"
      }
    },
    "DashboardUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DashboardUsers": {
      "$ref": "Collection",
      "$template": {
        "T": "DashboardUser"
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\-\\_\\.]{3,64}$"
        },
        "description": {
          "type": "string"
        },
        "schema": {
          "type": "string"
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "EventCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Event"
      }
    },
    "EventCreate": {
      "$extends": "Event",
      "type": "object",
      "required": [
        "name"
      ]
    },
    "EventSubscription": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "eventId": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "endpoint": {
          "type": "string"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "EventSubscriptionResponse"
          }
        }
      }
    },
    "EventSubscriptionCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "EventSubscription"
      }
    },
    "EventSubscriptionCreate": {
      "$extends": "EventSubscription",
      "type": "object",
      "required": [
        "eventId",
        "userId",
        "endpoint"
      ]
    },
    "EventSubscriptionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "code": {
          "type": "integer"
        },
        "attempts": {
          "type": "integer"
        },
        "error": {
          "type": "string"
        },
        "executeDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "EventSubscriptionUpdate": {
      "$extends": "EventSubscription",
      "type": "object"
    },
    "EventUpdate": {
      "$extends": "Event",
      "type": "object"
    },
    "FormContainer": {
      "type": "object",
      "properties": {
        "element": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "FormElementInput"
              },
              {
                "$ref": "FormElementSelect"
              },
              {
                "$ref": "FormElementTag"
              },
              {
                "$ref": "FormElementTextArea"
              }
            ]
          }
        }
      }
    },
    "FormElement": {
      "type": "object",
      "properties": {
        "element": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "help": {
          "type": "string"
        }
      },
      "required": [
        "element"
      ]
    },
    "FormElementInput": {
      "$extends": "FormElement",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "FormElementSelect": {
      "$extends": "FormElement",
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "$ref": "FormElementSelectOption"
          }
        }
      }
    },
    "FormElementSelectOption": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "FormElementTag": {
      "$extends": "FormElement",
      "type": "object"
    },
    "FormElementTextArea": {
      "$extends": "FormElement",
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        }
      }
    },
    "GeneratorIndexProvider": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "class": {
          "type": "string"
        }
      }
    },
    "GeneratorIndexProviders": {
      "type": "object",
      "properties": {
        "providers": {
          "type": "array",
          "items": {
            "$ref": "GeneratorIndexProvider"
          }
        }
      }
    },
    "GeneratorProvider": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "public": {
          "type": "boolean"
        },
        "config": {
          "$ref": "GeneratorProviderConfig"
        }
      }
    },
    "GeneratorProviderChangelog": {
      "type": "object",
      "properties": {
        "schemas": {
          "type": "array",
          "items": {
            "$ref": "Schema"
          }
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "Action"
          }
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      }
    },
    "GeneratorProviderConfig": {
      "type": "object",
      "additionalProperties": {
        "type": "any"
      },
      "maxProperties": 16
    },
    "Identity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "appId": {
          "type": "integer"
        },
        "roleId": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\-\\_]{3,255}$"
        },
        "icon": {
          "type": "string"
        },
        "class": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "authorizationUri": {
          "type": "string"
        },
        "tokenUri": {
          "type": "string"
        },
        "userInfoUri": {
          "type": "string"
        },
        "idProperty": {
          "type": "string"
        },
        "nameProperty": {
          "type": "string"
        },
        "emailProperty": {
          "type": "string"
        },
        "allowCreate": {
          "type": "boolean"
        }
      }
    },
    "IdentityCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Identity"
      }
    },
    "IdentityCreate": {
      "$extends": "Identity",
      "type": "object",
      "required": [
        "name",
        "class",
        "clientId",
        "clientSecret"
      ]
    },
    "IdentityUpdate": {
      "$extends": "Identity",
      "type": "object"
    },
    "Log": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "ip": {
          "type": "string"
        },
        "userAgent": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "header": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "LogError"
          }
        }
      }
    },
    "LogCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Log"
      }
    },
    "LogError": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "message": {
          "type": "integer"
        },
        "trace": {
          "type": "string"
        },
        "file": {
          "type": "string"
        },
        "line": {
          "type": "integer"
        }
      }
    },
    "LogErrorCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "LogError"
      }
    },
    "MarketplaceApp": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "screenshot": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "downloadUrl": {
          "type": "string"
        },
        "sha1Hash": {
          "type": "string"
        },
        "startUrl": {
          "type": "string"
        }
      }
    },
    "MarketplaceCollection": {
      "type": "object",
      "properties": {
        "apps": {
          "$ref": "MarketplaceCollectionApps"
        }
      }
    },
    "MarketplaceCollectionApps": {
      "type": "object",
      "additionalProperties": {
        "$ref": "MarketplaceRemoteApp"
      }
    },
    "MarketplaceInstall": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "MarketplaceLocalApp": {
      "$extends": "MarketplaceApp",
      "type": "object",
      "properties": {
        "remote": {
          "$ref": "MarketplaceApp"
        }
      }
    },
    "MarketplaceRemoteApp": {
      "$extends": "MarketplaceApp",
      "type": "object",
      "properties": {
        "local": {
          "$ref": "MarketplaceApp"
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Metadata": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "Operation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "active": {
          "type": "boolean"
        },
        "public": {
          "type": "boolean"
        },
        "stability": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "httpMethod": {
          "type": "string"
        },
        "httpPath": {
          "type": "string"
        },
        "httpCode": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\_\\.]{3,64}$"
        },
        "parameters": {
          "$ref": "OperationParameters"
        },
        "incoming": {
          "type": "string"
        },
        "outgoing": {
          "type": "string"
        },
        "throws": {
          "$ref": "OperationThrows"
        },
        "action": {
          "type": "string"
        },
        "costs": {
          "type": "integer"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "OperationCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Operation"
      }
    },
    "OperationCreate": {
      "$extends": "Operation",
      "type": "object",
      "required": [
        "httpMethod",
        "httpPath",
        "httpCode",
        "name",
        "outgoing",
        "action"
      ]
    },
    "OperationParameters": {
      "type": "object",
      "additionalProperties": {
        "$ref": "OperationSchema"
      }
    },
    "OperationSchema": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "enum": {
          "type": "string"
        }
      }
    },
    "OperationThrows": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "OperationUpdate": {
      "$extends": "Operation",
      "type": "object"
    },
    "Page": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "PageCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Page"
      }
    },
    "PageCreate": {
      "$extends": "Page",
      "type": "object",
      "required": [
        "title",
        "content"
      ]
    },
    "PageUpdate": {
      "$extends": "Page",
      "type": "object"
    },
    "Plan": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "points": {
          "type": "integer"
        },
        "period": {
          "type": "integer"
        },
        "externalId": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "PlanCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Plan"
      }
    },
    "PlanCreate": {
      "$extends": "Plan",
      "type": "object",
      "required": [
        "name",
        "price"
      ]
    },
    "PlanUpdate": {
      "$extends": "Plan",
      "type": "object"
    },
    "Rate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "priority": {
          "type": "integer",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\-\\_]{3,64}$"
        },
        "rateLimit": {
          "type": "integer",
          "minimum": 0
        },
        "timespan": {
          "format": "duration",
          "type": "string"
        },
        "allocation": {
          "type": "array",
          "items": {
            "$ref": "RateAllocation"
          }
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "RateAllocation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "operationId": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "planId": {
          "type": "integer"
        },
        "appId": {
          "type": "integer"
        },
        "authenticated": {
          "type": "boolean"
        }
      }
    },
    "RateCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Rate"
      }
    },
    "RateCreate": {
      "$extends": "Rate",
      "type": "object",
      "required": [
        "name"
      ]
    },
    "RateUpdate": {
      "$extends": "Rate",
      "type": "object"
    },
    "Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "categoryId": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\-\\_]{3,64}$"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RoleCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Role"
      }
    },
    "RoleCreate": {
      "$extends": "Role",
      "type": "object",
      "required": [
        "categoryId",
        "name"
      ]
    },
    "RoleUpdate": {
      "$extends": "Role",
      "type": "object"
    },
    "Schema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\-\\_]{3,255}$"
        },
        "source": {
          "$ref": "SchemaSource"
        },
        "form": {
          "$ref": "SchemaForm"
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "SchemaCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Schema"
      }
    },
    "SchemaCreate": {
      "$extends": "Schema",
      "type": "object",
      "required": [
        "name"
      ]
    },
    "SchemaForm": {
      "description": "Contains a UI vocabulary to describe the UI of the schema",
      "type": "object",
      "additionalProperties": {
        "type": "any"
      }
    },
    "SchemaPreviewResponse": {
      "type": "object",
      "properties": {
        "preview": {
          "type": "string"
        }
      }
    },
    "SchemaSource": {
      "description": "Contains the TypeSchema specification",
      "type": "object",
      "additionalProperties": {
        "type": "any"
      }
    },
    "SchemaUpdate": {
      "$extends": "Schema",
      "type": "object"
    },
    "Scope": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\-\\_\\.]{3,64}$"
        },
        "description": {
          "type": "string"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "ScopeOperation"
          }
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "ScopeCategories": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "ScopeCategory"
          }
        }
      }
    },
    "ScopeCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "$ref": "ScopeCategoryScope"
          }
        }
      }
    },
    "ScopeCategoryScope": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ScopeCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Scope"
      }
    },
    "ScopeCreate": {
      "$extends": "Scope",
      "type": "object",
      "required": [
        "name"
      ]
    },
    "ScopeOperation": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "integer"
        },
        "allow": {
          "type": "boolean"
        }
      }
    },
    "ScopeUpdate": {
      "$extends": "Scope",
      "type": "object"
    },
    "SdkGenerate": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string"
        },
        "config": {
          "type": "string"
        }
      }
    },
    "SdkResponse": {
      "type": "object",
      "properties": {
        "types": {
          "$ref": "SdkTypes"
        }
      }
    },
    "SdkTypes": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "StatisticChart": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "StatisticChartData"
          }
        },
        "series": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StatisticChartData": {
      "type": "object",
      "additionalProperties": {
        "type": "any"
      }
    },
    "StatisticCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "from": {
          "format": "date-time",
          "type": "string"
        },
        "to": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "planId": {
          "type": "integer"
        },
        "transactionId": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "points": {
          "type": "number"
        },
        "periodStart": {
          "format": "date-time",
          "type": "string"
        },
        "periodEnd": {
          "format": "date-time",
          "type": "string"
        },
        "insertDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TransactionCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Transaction"
      }
    },
    "TrashData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TrashDataCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "TrashData"
      }
    },
    "TrashRestore": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        }
      }
    },
    "TrashTypes": {
      "type": "object",
      "properties": {
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "roleId": {
          "type": "integer"
        },
        "planId": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\-\\_\\.]{3,32}$"
        },
        "email": {
          "type": "string"
        },
        "points": {
          "type": "integer"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "apps": {
          "type": "array",
          "items": {
            "$ref": "App"
          }
        },
        "metadata": {
          "$ref": "Metadata"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "UserCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "User"
      }
    },
    "UserCreate": {
      "$extends": "User",
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      },
      "required": [
        "roleId",
        "status",
        "name",
        "email",
        "password"
      ]
    },
    "UserUpdate": {
      "$extends": "User",
      "type": "object"
    }
  }
}