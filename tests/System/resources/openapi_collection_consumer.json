{
  "security": null,
  "operations": {
    "consumer.account.executePasswordReset": {
      "path": "/consumer/password_reset",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "UserPasswordReset"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "consumer.account"
      ]
    },
    "consumer.account.requestPasswordReset": {
      "path": "/consumer/password_reset",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "UserEmail"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "consumer.account"
      ]
    },
    "consumer.account.register": {
      "path": "/consumer/register",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "UserRegister"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "consumer.account"
      ]
    },
    "consumer.account.provider": {
      "path": "/consumer/provider/:provider",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "UserJWT"
        }
      },
      "arguments": {
        "provider": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "UserProvider"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "consumer.account"
      ]
    },
    "consumer.account.refresh": {
      "path": "/consumer/login",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "UserJWT"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "UserRefresh"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "consumer.account"
      ]
    },
    "consumer.account.login": {
      "path": "/consumer/login",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "UserJWT"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "UserLogin"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "consumer.account"
      ]
    },
    "consumer.account.authorize": {
      "path": "/consumer/authorize",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "AuthorizeResponse"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "AuthorizeRequest"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.account"
      ],
      "authorization": true,
      "tags": [
        "consumer.account"
      ]
    },
    "consumer.account.getApp": {
      "path": "/consumer/authorize",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "AuthorizeMeta"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.account"
      ],
      "authorization": true,
      "tags": [
        "consumer.account"
      ]
    },
    "consumer.account.activate": {
      "path": "/consumer/activate",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "UserActivate"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [],
      "authorization": true,
      "tags": [
        "consumer.account"
      ]
    },
    "consumer.account.changePassword": {
      "path": "/consumer/account/change_password",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "AccountChangePassword"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.account"
      ],
      "authorization": true,
      "tags": [
        "consumer.account"
      ]
    },
    "consumer.account.update": {
      "path": "/consumer/account",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "UserAccount"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.account"
      ],
      "authorization": true,
      "tags": [
        "consumer.account"
      ]
    },
    "consumer.account.get": {
      "path": "/consumer/account",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "UserAccount"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.account"
      ],
      "authorization": true,
      "tags": [
        "consumer.account"
      ]
    },
    "consumer.transaction.get": {
      "path": "/consumer/transaction/$transaction_id<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Transaction"
        }
      },
      "arguments": {
        "transaction_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.transaction"
      ],
      "authorization": true,
      "tags": [
        "consumer.transaction"
      ]
    },
    "consumer.transaction.getAll": {
      "path": "/consumer/transaction",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "TransactionCollection"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.transaction"
      ],
      "authorization": true,
      "tags": [
        "consumer.transaction"
      ]
    },
    "consumer.subscription.delete": {
      "path": "/consumer/subscription/$subscription_id<[0-9]+>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "subscription_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.subscription"
      ],
      "authorization": true,
      "tags": [
        "consumer.subscription"
      ]
    },
    "consumer.subscription.update": {
      "path": "/consumer/subscription/$subscription_id<[0-9]+>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "subscription_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "EventSubscriptionUpdate"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.subscription"
      ],
      "authorization": true,
      "tags": [
        "consumer.subscription"
      ]
    },
    "consumer.subscription.get": {
      "path": "/consumer/subscription/$subscription_id<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "EventSubscription"
        }
      },
      "arguments": {
        "subscription_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.subscription"
      ],
      "authorization": true,
      "tags": [
        "consumer.subscription"
      ]
    },
    "consumer.subscription.create": {
      "path": "/consumer/subscription",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "EventSubscriptionCreate"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.subscription"
      ],
      "authorization": true,
      "tags": [
        "consumer.subscription"
      ]
    },
    "consumer.subscription.getAll": {
      "path": "/consumer/subscription",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "EventSubscriptionCollection"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.subscription"
      ],
      "authorization": true,
      "tags": [
        "consumer.subscription"
      ]
    },
    "consumer.scope.getAll": {
      "path": "/consumer/scope",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "ScopeCollection"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.scope"
      ],
      "authorization": true,
      "tags": [
        "consumer.scope"
      ]
    },
    "consumer.plan.get": {
      "path": "/consumer/plan/$plan_id<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Plan"
        }
      },
      "arguments": {
        "plan_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.plan"
      ],
      "authorization": true,
      "tags": [
        "consumer.plan"
      ]
    },
    "consumer.plan.getAll": {
      "path": "/consumer/plan",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "PlanCollection"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.plan"
      ],
      "authorization": true,
      "tags": [
        "consumer.plan"
      ]
    },
    "consumer.payment.checkout": {
      "path": "/consumer/payment/:provider/checkout",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "PaymentCheckoutResponse"
        }
      },
      "arguments": {
        "provider": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "PaymentCheckoutRequest"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.payment"
      ],
      "authorization": true,
      "tags": [
        "consumer.payment"
      ]
    },
    "consumer.payment.portal": {
      "path": "/consumer/payment/:provider/portal",
      "method": "POST",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "PaymentPortalResponse"
        }
      },
      "arguments": {
        "provider": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "PaymentPortalRequest"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.payment"
      ],
      "authorization": true,
      "tags": [
        "consumer.payment"
      ]
    },
    "consumer.page.get": {
      "path": "/consumer/page/:page_id",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Page"
        }
      },
      "arguments": {
        "page_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.page"
      ],
      "authorization": true,
      "tags": [
        "consumer.page"
      ]
    },
    "consumer.page.getAll": {
      "path": "/consumer/page",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "PageCollection"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.page"
      ],
      "authorization": true,
      "tags": [
        "consumer.page"
      ]
    },
    "consumer.log.get": {
      "path": "/consumer/log/$log_id<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Log"
        }
      },
      "arguments": {
        "log_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.log"
      ],
      "authorization": true,
      "tags": [
        "consumer.log"
      ]
    },
    "consumer.log.getAll": {
      "path": "/consumer/log",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "LogCollection"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.log"
      ],
      "authorization": true,
      "tags": [
        "consumer.log"
      ]
    },
    "consumer.grant.delete": {
      "path": "/consumer/grant/$grant_id<[0-9]+>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "grant_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.grant"
      ],
      "authorization": true,
      "tags": [
        "consumer.grant"
      ]
    },
    "consumer.grant.getAll": {
      "path": "/consumer/grant",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "GrantCollection"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.grant"
      ],
      "authorization": true,
      "tags": [
        "consumer.grant"
      ]
    },
    "consumer.event.getAll": {
      "path": "/consumer/event",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "EventCollection"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.event"
      ],
      "authorization": true,
      "tags": [
        "consumer.event"
      ]
    },
    "consumer.app.delete": {
      "path": "/consumer/app/$app_id<[0-9]+>",
      "method": "DELETE",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "app_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.app"
      ],
      "authorization": true,
      "tags": [
        "consumer.app"
      ]
    },
    "consumer.app.update": {
      "path": "/consumer/app/$app_id<[0-9]+>",
      "method": "PUT",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "app_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        },
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "AppUpdate"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.app"
      ],
      "authorization": true,
      "tags": [
        "consumer.app"
      ]
    },
    "consumer.app.get": {
      "path": "/consumer/app/$app_id<[0-9]+>",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "App"
        }
      },
      "arguments": {
        "app_id": {
          "in": "path",
          "schema": {
            "type": "string"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.app"
      ],
      "authorization": true,
      "tags": [
        "consumer.app"
      ]
    },
    "consumer.app.create": {
      "path": "/consumer/app",
      "method": "POST",
      "return": {
        "code": 201,
        "schema": {
          "$ref": "Message"
        }
      },
      "arguments": {
        "payload": {
          "in": "body",
          "schema": {
            "$ref": "AppCreate"
          }
        }
      },
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.app"
      ],
      "authorization": true,
      "tags": [
        "consumer.app"
      ]
    },
    "consumer.app.getAll": {
      "path": "/consumer/app",
      "method": "GET",
      "return": {
        "code": 200,
        "schema": {
          "$ref": "AppCollection"
        }
      },
      "arguments": [],
      "throws": [],
      "description": "",
      "stability": 1,
      "security": [
        "consumer.app"
      ],
      "authorization": true,
      "tags": [
        "consumer.app"
      ]
    }
  },
  "definitions": {
    "AccountChangePassword": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string",
          "minLength": 8,
          "maxLength": 128
        },
        "newPassword": {
          "type": "string",
          "minLength": 8,
          "maxLength": 128
        },
        "verifyPassword": {
          "type": "string",
          "minLength": 8,
          "maxLength": 128
        }
      }
    },
    "App": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[A-z0-9\\-\\_]{3,64}$"
        },
        "url": {
          "type": "string",
          "minLength": 8
        },
        "appKey": {
          "type": "string"
        },
        "appSecret": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "AppCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "App"
      }
    },
    "AppCreate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[A-z0-9\\-\\_]{3,64}$"
        },
        "url": {
          "type": "string",
          "minLength": 8
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "url",
        "scopes"
      ]
    },
    "AppUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[A-z0-9\\-\\_]{3,64}$"
        },
        "url": {
          "type": "string",
          "minLength": 8
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "url",
        "scopes"
      ]
    },
    "AuthorizeMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "$ref": "Scope"
          }
        }
      }
    },
    "AuthorizeRequest": {
      "type": "object",
      "properties": {
        "responseType": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "redirectUri": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "allow": {
          "type": "boolean"
        }
      },
      "required": [
        "responseType",
        "clientId",
        "scope",
        "allow"
      ]
    },
    "AuthorizeResponse": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "token": {
          "$ref": "AuthorizeResponseToken"
        },
        "code": {
          "type": "string"
        },
        "redirectUri": {
          "type": "string"
        }
      }
    },
    "AuthorizeResponseToken": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "token_type": {
          "type": "string"
        },
        "expires_in": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "Collection": {
      "type": "object",
      "properties": {
        "totalResults": {
          "type": "integer"
        },
        "startIndex": {
          "type": "integer"
        },
        "itemsPerPage": {
          "type": "integer"
        },
        "entry": {
          "type": "array",
          "items": {
            "$generic": "T"
          }
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "EventCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Event"
      }
    },
    "EventSubscription": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "event": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "EventSubscriptionResponse"
          }
        }
      }
    },
    "EventSubscriptionCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "EventSubscription"
      }
    },
    "EventSubscriptionCreate": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        }
      },
      "required": [
        "event",
        "endpoint"
      ]
    },
    "EventSubscriptionResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "code": {
          "type": "integer"
        },
        "attempts": {
          "type": "string"
        },
        "executeDate": {
          "type": "string"
        }
      }
    },
    "EventSubscriptionUpdate": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        }
      },
      "required": [
        "event",
        "endpoint"
      ]
    },
    "Grant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "app": {
          "$ref": "App"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GrantCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Grant"
      }
    },
    "Log": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "appId": {
          "type": "integer"
        },
        "ip": {
          "type": "string"
        },
        "userAgent": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "header": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "LogCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Log"
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Metadata": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "PageCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Page"
      }
    },
    "PaymentCheckoutRequest": {
      "type": "object",
      "properties": {
        "planId": {
          "type": "integer"
        },
        "returnUrl": {
          "type": "string"
        }
      }
    },
    "PaymentCheckoutResponse": {
      "type": "object",
      "properties": {
        "approvalUrl": {
          "type": "string"
        }
      }
    },
    "PaymentPortalRequest": {
      "type": "object",
      "properties": {
        "returnUrl": {
          "type": "string"
        }
      }
    },
    "PaymentPortalResponse": {
      "type": "object",
      "properties": {
        "redirectUrl": {
          "type": "string"
        }
      }
    },
    "Plan": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "points": {
          "type": "integer"
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "PlanCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Plan"
      }
    },
    "Scope": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "pattern": "^[A-z0-9\\-\\_]{3,64}$"
        },
        "description": {
          "type": "string"
        },
        "metadata": {
          "$ref": "Metadata"
        }
      }
    },
    "ScopeCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Scope"
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "planId": {
          "type": "integer"
        },
        "plan": {
          "$ref": "Plan"
        },
        "transactionId": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "points": {
          "type": "number"
        },
        "periodStart": {
          "format": "date-time",
          "type": "string"
        },
        "periodEnd": {
          "format": "date-time",
          "type": "string"
        },
        "insertDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TransactionCollection": {
      "$ref": "Collection",
      "$template": {
        "T": "Transaction"
      }
    },
    "UserAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "planId": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "points": {
          "type": "integer"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "plans": {
          "type": "array",
          "items": {
            "$ref": "UserPlan"
          }
        },
        "metadata": {
          "$ref": "Metadata"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "UserActivate": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "required": [
        "token"
      ]
    },
    "UserEmail": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "captcha": {
          "type": "string"
        }
      },
      "required": [
        "email"
      ]
    },
    "UserJWT": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "expires_in": {
          "type": "integer"
        },
        "refresh_token": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserPasswordReset": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "required": [
        "token",
        "newPassword"
      ]
    },
    "UserPlan": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "points": {
          "type": "integer"
        },
        "period": {
          "type": "integer"
        }
      }
    },
    "UserProvider": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "redirectUri": {
          "type": "string"
        }
      }
    },
    "UserRefresh": {
      "type": "object",
      "properties": {
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "UserRegister": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "captcha": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "email",
        "password"
      ]
    }
  }
}