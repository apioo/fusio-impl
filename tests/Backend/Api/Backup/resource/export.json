{
  "action": [
    {
      "name": "MIME-Action",
      "class": "Fusio.Impl.Tests.Adapter.Test.MimeAction",
      "async": false,
      "date": "[datetime]"
    },
    {
      "name": "Inspect-Action",
      "class": "Fusio.Impl.Tests.Adapter.Test.InspectAction",
      "async": false,
      "date": "[datetime]"
    },
    {
      "name": "Sql-Insert",
      "class": "Fusio.Adapter.Sql.Action.SqlInsert",
      "async": false,
      "config": {
        "connection": 2,
        "table": "app_news"
      },
      "date": "[datetime]"
    },
    {
      "name": "Sql-Select-All",
      "class": "Fusio.Adapter.Sql.Action.SqlSelectAll",
      "async": false,
      "config": {
        "connection": 2,
        "table": "app_news"
      },
      "date": "[datetime]"
    },
    {
      "name": "Util-Static-Response",
      "class": "Fusio.Adapter.Util.Action.UtilStaticResponse",
      "async": false,
      "config": {
        "response": "{\"foo\": \"bar\"}"
      },
      "metadata": {
        "foo": "bar"
      },
      "date": "[datetime]"
    }
  ],
  "config": [
    {
      "type": 2,
      "name": "app_approval",
      "description": "If true the status of a new app is PENDING so that an administrator has to manually activate the app",
      "value": false
    },
    {
      "type": 3,
      "name": "consumer_max_apps",
      "description": "The max amount of apps a consumer can generate",
      "value": 16
    },
    {
      "type": 3,
      "name": "consumer_max_tokens",
      "description": "The max amount of tokens a consumer can generate",
      "value": 16
    },
    {
      "type": 3,
      "name": "consumer_max_webhooks",
      "description": "The max amount of webhooks a consumer can register",
      "value": 8
    },
    {
      "type": 1,
      "name": "authorization_url",
      "description": "Url where the user can authorize for the OAuth2 flow",
      "value": ""
    },
    {
      "type": 1,
      "name": "info_title",
      "description": "The title of the application",
      "value": "Fusio"
    },
    {
      "type": 1,
      "name": "info_description",
      "description": "A short description of the application. CommonMark syntax MAY be used for rich text representation",
      "value": "Self-Hosted API Management for Builders."
    },
    {
      "type": 1,
      "name": "info_tos",
      "description": "A URL to the Terms of Service for the API. MUST be in the format of a URL",
      "value": ""
    },
    {
      "type": 1,
      "name": "info_contact_name",
      "description": "The identifying name of the contact person\/organization",
      "value": ""
    },
    {
      "type": 1,
      "name": "info_contact_url",
      "description": "The URL pointing to the contact information. MUST be in the format of a URL",
      "value": ""
    },
    {
      "type": 1,
      "name": "info_contact_email",
      "description": "The email address of the contact person\/organization. MUST be in the format of an email address",
      "value": ""
    },
    {
      "type": 1,
      "name": "info_license_name",
      "description": "The license name used for the API",
      "value": ""
    },
    {
      "type": 1,
      "name": "info_license_url",
      "description": "A URL to the license used for the API. MUST be in the format of a URL",
      "value": ""
    },
    {
      "type": 1,
      "name": "mail_register_subject",
      "description": "Subject of the activation mail",
      "value": "Fusio registration"
    },
    {
      "type": 6,
      "name": "mail_register_body",
      "description": "Body of the activation mail",
      "value": "Hello {name},\n\nyou have successful registered at Fusio.\nTo activate you account please visit the following link:\n{apps_url}\/developer\/register\/activate\/{token}"
    },
    {
      "type": 1,
      "name": "mail_pw_reset_subject",
      "description": "Subject of the password reset mail",
      "value": "Fusio password reset"
    },
    {
      "type": 6,
      "name": "mail_pw_reset_body",
      "description": "Body of the password reset mail",
      "value": "Hello {name},\n\nyou have requested to reset your password.\nTo set a new password please visit the following link:\n{apps_url}\/developer\/password\/confirm\/{token}\n\nPlease ignore this email if you have not requested a password reset."
    },
    {
      "type": 1,
      "name": "mail_points_subject",
      "description": "Subject of the points threshold mail",
      "value": "Fusio points threshold reached"
    },
    {
      "type": 6,
      "name": "mail_points_body",
      "description": "Body of the points threshold mail",
      "value": "Hello {name},\n\nyour account has reached the configured threshold of {points} points.\nIf your account reaches 0 points your are not longer able to invoke specific endpoints.\nTo prevent this please go to the developer portal to purchase new points:\n{apps_url}\/developer"
    },
    {
      "type": 1,
      "name": "recaptcha_key",
      "description": "ReCaptcha key",
      "value": ""
    },
    {
      "type": 1,
      "name": "recaptcha_secret",
      "description": "ReCaptcha secret",
      "value": ""
    },
    {
      "type": 1,
      "name": "payment_stripe_secret",
      "description": "The stripe webhook secret which is needed to verify a webhook request",
      "value": ""
    },
    {
      "type": 1,
      "name": "payment_stripe_portal_configuration",
      "description": "The stripe portal configuration id",
      "value": ""
    },
    {
      "type": 1,
      "name": "payment_currency",
      "description": "The three-character ISO-4217 currency code which is used to process payments",
      "value": ""
    },
    {
      "type": 1,
      "name": "role_default",
      "description": "Default role which a user gets assigned on registration",
      "value": "Consumer"
    },
    {
      "type": 3,
      "name": "points_default",
      "description": "The default amount of points which a user receives if he registers",
      "value": 0
    },
    {
      "type": 3,
      "name": "points_threshold",
      "description": "If a user goes below this points threshold we send an information to the user",
      "value": 0
    },
    {
      "type": 1,
      "name": "system_mailer",
      "description": "Optional the name of an SMTP connection which is used as mailer, by default the system uses the connection configured through the APP_MAILER environment variable",
      "value": ""
    },
    {
      "type": 1,
      "name": "system_dispatcher",
      "description": "Optional the name of an HTTP or Message-Queue connection which is used to dispatch events. By default the system uses simply cron and an internal table to dispatch such events, for better performance you can provide a Message-Queue connection and Fusio will only dispatch the event to the queue, then your worker must execute the actual webhook HTTP request",
      "value": ""
    },
    {
      "type": 3,
      "name": "user_pw_length",
      "description": "Minimal required password length",
      "value": 8
    },
    {
      "type": 2,
      "name": "user_approval",
      "description": "Whether the user needs to activate the account through an email",
      "value": true
    },
    {
      "type": 1,
      "name": "marketplace_client_id",
      "description": "The marketplace client id",
      "value": ""
    },
    {
      "type": 1,
      "name": "marketplace_client_secret",
      "description": "The marketplace client secret",
      "value": ""
    }
  ],
  "connection": [
    {
      "status": 1,
      "name": "LocalFilesystem",
      "class": "Fusio.Adapter.File.Connection.Filesystem",
      "config": {
        "config": ".\/tests\/resources"
      }
    },
    {
      "status": 1,
      "name": "Worker",
      "class": "Fusio.Adapter.Worker.Connection.Worker",
      "config": {
        "url": "http:\/\/127.0.0.1"
      }
    },
    {
      "status": 1,
      "name": "Paypal",
      "class": "Fusio.Impl.Tests.Adapter.Test.PaypalConnection",
      "config": {
        "foo": "bar"
      }
    },
    {
      "status": 1,
      "name": "Test",
      "class": "Fusio.Impl.Connection.Native",
      "config": {
        "foo": "bar"
      },
      "metadata": {
        "foo": "bar"
      }
    },
    {
      "status": 1,
      "name": "System",
      "class": "Fusio.Impl.Connection.System",
      "config": {}
    }
  ],
  "cronjob": [
    {
      "name": "Test-Cron",
      "cron": "* * * * *",
      "action": "Sql-Select-All",
      "metadata": {
        "foo": "bar"
      }
    }
  ],
  "event": [
    {
      "status": 1,
      "name": "foo-event",
      "description": "Foo event description",
      "metadata": {
        "foo": "bar"
      }
    }
  ],
  "plan": [
    {
      "status": 1,
      "name": "Plan A",
      "description": "",
      "price": 39.99,
      "points": 500,
      "period": 1,
      "externalId": "price_1L3dOA2Tb35ankTn36cCgliu",
      "scopes": [
        "foo",
        "bar",
        "plan_scope"
      ]
    },
    {
      "status": 1,
      "name": "Plan B",
      "description": "",
      "price": 49.99,
      "points": 1000
    }
  ],
  "rate": [
    {
      "priority": 10,
      "name": "gold",
      "rateLimit": 16,
      "timespan": "P1M",
      "allocation": [
        {
          "id": 4,
          "rateId": 4,
          "operationId": 233,
          "authenticated": true
        }
      ]
    },
    {
      "priority": 5,
      "name": "silver",
      "rateLimit": 8,
      "timespan": "P1M",
      "metadata": {
        "foo": "bar"
      },
      "allocation": [
        {
          "id": 3,
          "rateId": 3,
          "operationId": 232
        }
      ]
    },
    {
      "priority": 4,
      "name": "Default-Anonymous",
      "rateLimit": 900,
      "timespan": "PT1H",
      "allocation": [
        {
          "id": 2,
          "rateId": 2,
          "authenticated": false
        }
      ]
    },
    {
      "priority": 0,
      "name": "Default",
      "rateLimit": 3600,
      "timespan": "PT1H",
      "allocation": [
        {
          "id": 1,
          "rateId": 1
        }
      ]
    }
  ],
  "schema": [
    {
      "name": "Entry-Schema",
      "source": {
        "definitions": {
          "Entry": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "$ref": "Entry"
      },
      "form": {
        "title": {
          "ui:autofocus": true,
          "ui:emptyValue": ""
        },
        "content": {
          "ui:widget": "textarea"
        },
        "date": {
          "ui:widget": "alt-datetime"
        }
      },
      "readonly": false
    },
    {
      "name": "Collection-Schema",
      "metadata": {
        "foo": "bar"
      },
      "source": {
        "definitions": {
          "Entry": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "title": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "Collection": {
            "title": "collection",
            "type": "object",
            "properties": {
              "totalResults": {
                "type": "integer"
              },
              "itemsPerPage": {
                "type": "integer"
              },
              "startIndex": {
                "type": "integer"
              },
              "entry": {
                "$ref": "Entry"
              }
            }
          }
        },
        "$ref": "Collection"
      },
      "readonly": false
    },
    {
      "name": "Message",
      "source": {
        "$class": "Fusio\\Model\\Common\\Message"
      },
      "readonly": true
    },
    {
      "name": "Passthru",
      "source": {
        "$class": "PSX\\Api\\Model\\Passthru"
      },
      "readonly": true
    }
  ],
  "scope": [
    {
      "name": "plan_scope",
      "description": "Plan scope access"
    },
    {
      "name": "bar",
      "description": "Bar access"
    },
    {
      "name": "foo",
      "description": "Foo access",
      "metadata": {
        "foo": "bar"
      }
    },
    {
      "name": "default",
      "description": ""
    }
  ],
  "role": [
    {
      "categoryId": 1,
      "status": 1,
      "name": "Administrator",
      "scopes": [
        "backend",
        "backend.account",
        "backend.action",
        "backend.app",
        "backend.audit",
        "backend.backup",
        "backend.category",
        "backend.config",
        "backend.connection",
        "backend.cronjob",
        "backend.dashboard",
        "backend.database",
        "backend.event",
        "backend.file",
        "backend.firewall",
        "backend.form",
        "backend.generator",
        "backend.identity",
        "backend.log",
        "backend.marketplace",
        "backend.operation",
        "backend.page",
        "backend.plan",
        "backend.rate",
        "backend.role",
        "backend.schema",
        "backend.scope",
        "backend.sdk",
        "backend.statistic",
        "backend.tenant",
        "backend.test",
        "backend.token",
        "backend.transaction",
        "backend.trash",
        "backend.user",
        "backend.webhook",
        "consumer",
        "consumer.account",
        "consumer.app",
        "consumer.event",
        "consumer.form",
        "consumer.grant",
        "consumer.identity",
        "consumer.log",
        "consumer.page",
        "consumer.payment",
        "consumer.plan",
        "consumer.scope",
        "consumer.token",
        "consumer.transaction",
        "consumer.webhook",
        "authorization",
        "default"
      ]
    },
    {
      "categoryId": 1,
      "status": 1,
      "name": "Backend",
      "scopes": [
        "backend",
        "backend.account",
        "backend.action",
        "backend.app",
        "backend.audit",
        "backend.backup",
        "backend.category",
        "backend.config",
        "backend.connection",
        "backend.cronjob",
        "backend.dashboard",
        "backend.database",
        "backend.event",
        "backend.file",
        "backend.firewall",
        "backend.form",
        "backend.generator",
        "backend.identity",
        "backend.log",
        "backend.marketplace",
        "backend.operation",
        "backend.page",
        "backend.plan",
        "backend.rate",
        "backend.role",
        "backend.schema",
        "backend.scope",
        "backend.sdk",
        "backend.statistic",
        "backend.tenant",
        "backend.test",
        "backend.token",
        "backend.transaction",
        "backend.trash",
        "backend.user",
        "backend.webhook",
        "authorization",
        "default"
      ]
    },
    {
      "categoryId": 1,
      "status": 1,
      "name": "Consumer",
      "scopes": [
        "consumer",
        "consumer.account",
        "consumer.app",
        "consumer.event",
        "consumer.form",
        "consumer.grant",
        "consumer.identity",
        "consumer.log",
        "consumer.page",
        "consumer.payment",
        "consumer.plan",
        "consumer.scope",
        "consumer.token",
        "consumer.transaction",
        "consumer.webhook",
        "authorization",
        "default"
      ]
    }
  ],
  "operation": [
    {
      "status": 1,
      "name": "mime.xml",
      "scopes": [
        "bar"
      ],
      "active": true,
      "public": false,
      "stability": 2,
      "description": "",
      "httpMethod": "POST",
      "httpPath": "\/mime\/xml",
      "httpCode": 200,
      "parameters": {},
      "incoming": "mime:\/\/application\/xml",
      "outgoing": "mime:\/\/application\/xml",
      "throws": {},
      "action": "action:\/\/MIME-Action",
      "costs": 0
    },
    {
      "status": 1,
      "name": "mime.text",
      "scopes": [
        "bar"
      ],
      "active": true,
      "public": false,
      "stability": 2,
      "description": "",
      "httpMethod": "POST",
      "httpPath": "\/mime\/text",
      "httpCode": 200,
      "parameters": {},
      "incoming": "mime:\/\/text\/plain",
      "outgoing": "mime:\/\/text\/plain",
      "throws": {},
      "action": "action:\/\/MIME-Action",
      "costs": 0
    },
    {
      "status": 1,
      "name": "mime.multipart",
      "scopes": [
        "bar"
      ],
      "active": true,
      "public": false,
      "stability": 2,
      "description": "",
      "httpMethod": "POST",
      "httpPath": "\/mime\/multipart",
      "httpCode": 200,
      "parameters": {},
      "incoming": "mime:\/\/multipart\/form-data",
      "outgoing": "mime:\/\/multipart\/form-data",
      "throws": {},
      "action": "action:\/\/MIME-Action",
      "costs": 0
    },
    {
      "status": 1,
      "name": "mime.json",
      "scopes": [
        "bar"
      ],
      "active": true,
      "public": false,
      "stability": 2,
      "description": "",
      "httpMethod": "POST",
      "httpPath": "\/mime\/json",
      "httpCode": 200,
      "parameters": {},
      "incoming": "mime:\/\/application\/json",
      "outgoing": "mime:\/\/application\/json",
      "throws": {},
      "action": "action:\/\/MIME-Action",
      "costs": 0
    },
    {
      "status": 1,
      "name": "mime.form",
      "scopes": [
        "bar"
      ],
      "active": true,
      "public": false,
      "stability": 2,
      "description": "",
      "httpMethod": "POST",
      "httpPath": "\/mime\/form",
      "httpCode": 200,
      "parameters": {},
      "incoming": "mime:\/\/application\/x-www-form-urlencoded",
      "outgoing": "mime:\/\/application\/x-www-form-urlencoded",
      "throws": {},
      "action": "action:\/\/MIME-Action",
      "costs": 0
    },
    {
      "status": 1,
      "name": "mime.binary",
      "scopes": [
        "bar"
      ],
      "active": true,
      "public": false,
      "stability": 2,
      "description": "",
      "httpMethod": "POST",
      "httpPath": "\/mime\/binary",
      "httpCode": 200,
      "parameters": {},
      "incoming": "mime:\/\/application\/octet-stream",
      "outgoing": "mime:\/\/application\/octet-stream",
      "throws": {},
      "action": "action:\/\/MIME-Action",
      "costs": 0
    },
    {
      "status": 1,
      "name": "inspect.delete",
      "scopes": [
        "bar"
      ],
      "active": true,
      "public": false,
      "stability": 2,
      "description": "",
      "httpMethod": "DELETE",
      "httpPath": "\/inspect\/:foo",
      "httpCode": 200,
      "parameters": {},
      "incoming": "php+class:\/\/PSX.Api.Model.Passthru",
      "outgoing": "php+class:\/\/PSX.Api.Model.Passthru",
      "throws": {},
      "action": "action:\/\/Inspect-Action",
      "costs": 0
    },
    {
      "status": 1,
      "name": "inspect.patch",
      "scopes": [
        "bar"
      ],
      "active": true,
      "public": false,
      "stability": 2,
      "description": "",
      "httpMethod": "PATCH",
      "httpPath": "\/inspect\/:foo",
      "httpCode": 200,
      "parameters": {},
      "incoming": "php+class:\/\/PSX.Api.Model.Passthru",
      "outgoing": "php+class:\/\/PSX.Api.Model.Passthru",
      "throws": {},
      "action": "action:\/\/Inspect-Action",
      "costs": 0
    },
    {
      "status": 1,
      "name": "inspect.put",
      "scopes": [
        "bar"
      ],
      "active": true,
      "public": false,
      "stability": 2,
      "description": "",
      "httpMethod": "PUT",
      "httpPath": "\/inspect\/:foo",
      "httpCode": 200,
      "parameters": {},
      "incoming": "php+class:\/\/PSX.Api.Model.Passthru",
      "outgoing": "php+class:\/\/PSX.Api.Model.Passthru",
      "throws": {},
      "action": "action:\/\/Inspect-Action",
      "costs": 0
    },
    {
      "status": 1,
      "name": "inspect.post",
      "scopes": [
        "foo",
        "bar"
      ],
      "active": true,
      "public": false,
      "stability": 2,
      "description": "",
      "httpMethod": "POST",
      "httpPath": "\/inspect\/:foo",
      "httpCode": 200,
      "parameters": {},
      "incoming": "php+class:\/\/PSX.Api.Model.Passthru",
      "outgoing": "php+class:\/\/PSX.Api.Model.Passthru",
      "throws": {},
      "action": "action:\/\/Inspect-Action",
      "costs": 0
    },
    {
      "status": 1,
      "name": "inspect.get",
      "scopes": [
        "foo",
        "bar"
      ],
      "active": true,
      "public": false,
      "stability": 2,
      "description": "",
      "httpMethod": "GET",
      "httpPath": "\/inspect\/:foo",
      "httpCode": 200,
      "parameters": {},
      "incoming": "php+class:\/\/PSX.Api.Model.Passthru",
      "outgoing": "php+class:\/\/PSX.Api.Model.Passthru",
      "throws": {},
      "action": "action:\/\/Inspect-Action",
      "costs": 0
    },
    {
      "status": 1,
      "name": "test.createFoo",
      "scopes": [
        "bar"
      ],
      "active": true,
      "public": false,
      "stability": 2,
      "description": "",
      "httpMethod": "POST",
      "httpPath": "\/foo",
      "httpCode": 201,
      "parameters": {},
      "incoming": "schema:\/\/Entry-Schema",
      "outgoing": "php+class:\/\/PSX.Api.Model.Passthru",
      "throws": {},
      "action": "action:\/\/Sql-Insert",
      "costs": 1
    },
    {
      "status": 1,
      "name": "test.listFoo",
      "scopes": [
        "bar"
      ],
      "active": true,
      "public": true,
      "stability": 1,
      "description": "",
      "httpMethod": "GET",
      "httpPath": "\/foo",
      "httpCode": 200,
      "parameters": {},
      "outgoing": "schema:\/\/Collection-Schema",
      "throws": {},
      "action": "action:\/\/Sql-Select-All",
      "costs": 0
    },
    {
      "status": 1,
      "name": "meta.getAbout",
      "active": true,
      "public": true,
      "stability": 2,
      "description": "Returns meta information and links about the current installed Fusio version",
      "httpMethod": "GET",
      "httpPath": "\/",
      "httpCode": 200,
      "parameters": {},
      "outgoing": "php+class:\/\/Fusio.Model.System.About",
      "throws": {
        "999": "php+class:\/\/Fusio.Model.Common.Message"
      },
      "action": "php+class:\/\/Fusio.Impl.System.Action.Meta.GetAbout",
      "costs": 0
    }
  ]
}