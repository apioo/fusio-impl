<?php
namespace Fusio\Impl\Worker\Generated;

/**
 * Autogenerated by Thrift Compiler (0.18.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

/**
 * The Fusio Worker provides a simple interface so that the Fusio instance can interact with the worker.
 */
interface WorkerIf
{
    /**
     * Sets a specific connection to the worker. This method is invoked everytime a connection is created or updated at
     * the Fusio instance. The worker must persist the connection so at it can be reused on execution
     * 
     * @param \Fusio\Impl\Worker\Generated\Connection $connection
     * @return \Fusio\Impl\Worker\Generated\Message
     */
    public function setConnection($connection);
    /**
     * Sets a specific action to the worker. This method is invoked everytime an action is created or updated at the Fusio
     * instance. The worker must persist the action code at a file which then can be executed. If your language needs a
     * compile step it should be invoked at this call
     * 
     * @param \Fusio\Impl\Worker\Generated\Action $action
     * @return \Fusio\Impl\Worker\Generated\Message
     */
    public function setAction($action);
    /**
     * Is called if an user invokes a route at Fusio and this routes has a worker action assigned. The worker must then
     * execute the provided action name and return the response
     * 
     * @param \Fusio\Impl\Worker\Generated\Execute $execute
     * @return \Fusio\Impl\Worker\Generated\Result
     */
    public function executeAction($execute);
}
